#include <stdio.h>
#include <stdlib.h>

typedef struct student
{
	char name[20];
	char num[20];
	char sex[5];
	int age;
	struct  student *pnext;
}stu;

stu* Creat()
{
	stu* P=(stu*)malloc(sizeof(stu));
	P->pnext=NULL;
	
	return  P;
}
void Add(stu*P)
{
	stu* pnew=NULL;
	int n;
	printf("请输入学生数:");
	scanf("%d",&n);
	for(int i=0;i<n;i++)
	{
		pnew=(stu*)malloc(sizeof(stu));
		printf("\n请输入第%d位学生信息:",i+1);
		printf("\n请输入姓名:");
		scanf("%s",pnew->name);
		printf("请输入学号:");
		scanf("%s",pnew->num);
		printf("请输入性别:");
		scanf("%s",pnew->sex);
		printf("请输入年龄:");
		scanf("%d",&pnew->age);
		
		pnew->pnext=NULL;
		P->pnext=pnew;
		P=P->pnext;
	}
}

void Print(stu *P)
{
	P=P->pnext;
	while(P!=NULL)
	{
		printf("姓名:%s  学号:%s  性别:%s  年龄:%d\n",P->name,P->num,P->sex,P->age);
		P=P->pnext;
	}
}

void Delete(stu* phead,int n)
{
	int i;
	stu *pTemp;  //临时指针
	stu *pPre;	 //表示要删除节点前的节点
	pTemp=phead;
	pPre=pTemp;
	int a=0;
	while(1)
	{
		if(n==pTemp->age)
		{
			pPre->pnext=pTemp->pnext;	//连接删除节点两边的节点 
			break;
		}
		else
		{
			pPre=pTemp;
			pTemp=pTemp->pnext;
			while(pTemp==NULL)
			{
				printf("没有该信息\n");
				a++;
				break;
			} 
		}
		if(a==1)
		break;
	}
	free(pTemp);	
}

stu* insert(stu* p)			//插入头结点之后 
{
	stu *pn;	//定义pn指向新分配的空间
	printf("请输入学生的姓名、学号、性别、年龄:\n");
	pn=(stu*)malloc(sizeof(stu));	//分配内存空间，返回该内存
	scanf("%s",pn->name); 
	scanf("%s",pn->num);
	scanf("%s",pn->sex);
	scanf("%d",&pn->age);
	
	pn->pnext=p->pnext;		//新节点指针指向插入节点的下一个节点 
	p->pnext=pn;			//插入节点的指针指向新节点 
	
	return p;				//返回头指针 
}

int main()
{
	int n;
	stu *pstu;
	pstu=Creat();
	Add(pstu);
	Print(pstu);
	printf("请输入要删除信息的年龄：");
	scanf("%d",&n);
	Delete(pstu,n);
	printf("删除后的信息为：\n");
	Print(pstu);
	/*insert(pstu);
	Print(pstu);*/
	return 0;
}